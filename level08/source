#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <strings.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdbool.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

unsigned long log_wrapper(FILE *a1, const char *a2, const char *a3)
{
  char dest[264]; // [rsp+20h] [rbp-110h] BYREF
  unsigned long v6; // [rsp+128h] [rbp-8h]

  v6 = __readfsqword(0x28u);
  strcpy(dest, a2);
  snprintf(&dest[strlen(dest)], 254 - strlen(dest), a3);
  dest[strcspn(dest, "\n")] = 0;
  fprintf(a1, "LOG: %s\n", dest);
  return __readfsqword(0x28u) ^ v6;
}

int main(int argc, const char **argv)
{
    FILE *v4;            // [rsp+0x28] [rbp-0x88]
    FILE *stream;        // [rsp+0x30] [rbp-0x80]
    int fd;              // [rsp+0x38] [rbp-0x78]
    char buf;            // [rsp+0x3f] [rbp-0x71] BYREF
    char dest[104];      // [rsp+0x40] [rbp-0x70] BYREF

    buf = -1;
    if (argc != 2)
    {
        printf("Usage: %s filename\n", *argv);
    }

    v4 = fopen("./backups/.log", "w");
    if (!v4)
    {
        printf("ERROR: Failed to open %s\n", "./backups/.log");
        exit(1);
    }
    log_wrapper(v4, "Starting back up: ", argv[1]);
    stream = fopen(argv[1], "r");
    if (!stream)
    {
        printf("ERROR: Failed to open %s\n", argv[1]);
        exit(1);
    }
    strcpy(dest, "./backups/");
    strncat(dest, argv[1], 99 - strlen(dest));
    fd = open(dest, O_WRONLY | O_CREAT | O_EXCL, 0660);
    if (fd < 0)
    {
        printf("ERROR: Failed to open %s%s\n", "./backups/", argv[1]);
        exit(1);
    }
    while (1)
    {
        buf = fgetc(stream);
        if (buf == -1)
            break;
        write(fd, &buf, 1);
    }
    log_wrapper(v4, "Finished back up ", argv[1]);
    fclose(stream);
    close(fd);
    return 0;
}

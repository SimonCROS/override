<!-- vim: syntax=Markdown -->

Pour ce tout premier exercice, nous avons un binaire présent dans notre home. On remarque qu'il a des permissions particulières :

```sh
level00@OverRide:~$ ls -la level00 
-rwsr-s---+ 1 level01 users 7280 Sep 10  2016 level00
level00@OverRide:~$ getfacl level00 
# file: level00
# owner: level01
# group: users
# flags: ss-
user::rwx
user:level00:r-x
group::---
mask::r-x
other::---
```

L'utilisateur `level00` possède les permissions d'execution, et le flag `setuid` est actif. Ce qui signifie que le binaire est exécuté en tant `level01` car il est sont propriétaire.\
(idem pour les exercices suivants, qui pointeront vers l'utilisateur d'après)

En décompilant le code, on se rend compte qu'un appel à la fonction `system("/bin/sh");` est fait sous réserve que le résultat de l'input utilisateur soit égal à 5276.
Il nous suffit donc de saisir le nombre 5276 lors de l'exécution pour d'obtenir un shell authentifié en tant que `level01`. Ensuite une simple commande `cat nous permet de récupérer le flag.

```sh
level00@OverRide:~$ echo 5276 > /tmp/pass
level00@OverRide:~$ cat /tmp/pass - | ./level00 
***********************************
* 	     -Level00 -		  *
***********************************
Password:
Authenticated!
whoami
level01
cat ../level01/.pass
uSq2ehEGT6c9S24zbshexZQBXUGrncxn5sD5QfGL
```
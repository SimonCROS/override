#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <strings.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdbool.h>

int clear_stdin()
{
    int result;

    do
    {
        result = getchar();
    } while ((char)result != 10 && (char)result != 0xff);
    return result;
}

int get_unum()
{
    int input = 0;

    fflush(stdout);
    scanf("%u", &input);
    clear_stdin();
    return input;
}

int store_number(int *data)
{
    unsigned int number;
    unsigned int index;

    printf(" Number: ");
    number = get_unum();
    printf(" Index: ");
    index = get_unum();
    if (index % 3 == 0 || number >> 24 == 0xb7)
    {
        puts(" *** ERROR! ***");
        puts("   This index is reserved for wil!");
        puts(" *** ERROR! ***");
        return 1;
    }
    else
    {
        data[index] = number;
        return 0;
    }
}

int read_number(int *data)
{
    int index;

    printf(" Index: ");
    index = get_unum();
    printf(" Number at data[%u] is %u\n", index, data[index]);
    return 0;
}

int main(int argc, const char **argv, const char **envp)
{
    int data[100];    // [esp+0x24] [ebp-0x1b8] BYREF
    int number;       // [esp+0x1b4] [ebp-0x28]
    char s[4];        // [esp+0x1b8] [ebp-0x24] BYREF
    int v9;           // [esp+0x1bc] [ebp-0x20]
    int v10;          // [esp+0x1c0] [ebp-0x1c]
    int v11;          // [esp+0x1c4] [ebp-0x18]
    int v12;          // [esp+0x1c8] [ebp-0x14]
    unsigned int v13; // [esp+0x1cc] [ebp-0x10]

    v13 = 0x12fdb500;
    number = 0;
    *(int *)s = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    memset(data, 0, sizeof(data));
    while (*argv)
    {
        memset((int *)*argv, 0, strlen(*argv));
        ++argv;
    }
    while (*envp)
    {
        memset((int *)*envp, 0, strlen(*envp));
        ++envp;
    }
    puts(
        "----------------------------------------------------\n"
        "  Welcome to wil's crappy number storage service!   \n"
        "----------------------------------------------------\n"
        " Commands:                                          \n"
        "    store - store a number into the data storage    \n"
        "    read  - read a number from the data storage     \n"
        "    quit  - exit the program                        \n"
        "----------------------------------------------------\n"
        "   wil has reserved some storage :>                 \n"
        "----------------------------------------------------\n");
    while (1)
    {
        printf("Input command: ");
        number = 1;
        fgets(s, 20, stdin);
        s[strlen(s) - 1] = 0;

        if (!memcmp(s, "store", 5u))
            number = store_number(data);
        else if (!memcmp(s, "read", 4u))
            number = read_number(data);
        else if (!memcmp(s, "quit", 4u))
            return 0;

        if (number)
            printf(" Failed to do %s command\n", s);
        else
            printf(" Completed %s command successfully\n", s);

        *(int *)s = 0;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
    }
}

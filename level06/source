#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <strings.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdbool.h>

bool auth(char *login, unsigned int serial)
{
    int loginLength;
    unsigned int key;

    login[strcspn(login, "\n")] = 0;
    loginLength = strnlen(login, 32);

    if (loginLength <= 5)
    {
        return 1;
    }

    if (ptrace(PTRACE_TRACEME, 0, 1, 0) == -1) // Is in debugger
    {
        puts("\x1B[32m.---------------------------.");
        puts("\x1B[31m| !! TAMPERING DETECTED !!  |");
        puts("\x1B[32m'---------------------------'");
        return 1;
    }

    key = (login[3] ^ 0x1337) + 6221293;
    for (int i = 0; i < loginLength; ++i)
    {
        if (login[i] <= 31)
            return 1;
        key += (key ^ (unsigned int)login[i]) % 1337;
    }

    return serial != key;
}

int main(int argc, char const *argv[])
{
    char login[32];
    unsigned int serial;

    puts("***********************************");
    puts("*\t\tlevel06\t\t  *");
    puts("***********************************");
    printf("-> Enter Login: ");
    fgets(login, 32, stdin);

    puts("***********************************");
    puts("***** NEW ACCOUNT DETECTED ********");
    puts("***********************************");
    printf("-> Enter Serial: ");
    scanf("%u", &serial);

    if (auth(login, serial))
    {
        return 1;
    }

    puts("Authenticated!");
    system("/bin/sh");
    return 0;
}
